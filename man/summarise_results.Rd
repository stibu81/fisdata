% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/analyse.R
\name{summarise_results}
\alias{summarise_results}
\title{Summarise athlete's results}
\usage{
summarise_results(
  results,
  by = c("season", "category", "discipline"),
  show_pos = c(1, 2, 3, 5, 10, 20, 30),
  show_dnf = TRUE,
  show_podiums = TRUE,
  show_n_races = TRUE,
  show_points = TRUE
)
}
\arguments{
\item{results}{athlete's results as returned by \code{\link[=query_results]{query_results()}}.}

\item{by}{variables to groups the results by. Possible values are "season",
"category", "discipline", "place", and "nation".
Values are partially matched. Set this value
to an empty vector (\code{c()}) or \code{NA} to summarise without grouping.}

\item{show_pos}{numeric that controls the summary of ranks. Indicate the
break points for the ranks to summarise. The function will then return
counts for the number of ranks that are at least as good as each break
point an worse then the next better break point. Set this value to an
empty vector (\code{c()}) or \code{FALSE} to not include the position summaries.}

\item{show_dnf}{logical, should the races where the athlete did not finish
be counted?}

\item{show_podiums}{logical,  should the count of podiums (ranks 1 to 3)
be returned?}

\item{show_n_races}{logical, should the number of races be returned?}

\item{show_points}{logical, should the sum of the cup points be returned?}
}
\value{
a \code{tibble} which always contains \code{athlete} as its first column. In addition,
it contains the grouping columns indicated by the argument \code{by} and possibly
one or several columns containing the requested summaries.
}
\description{
Summarise the results of an athlete as they are returned by
\code{\link[=query_results]{query_results()}}.
}
\examples{
\dontrun{
# get Marco Odermatts World Cup results
odermatt <- query_athletes("odermatt", "marco")
odermatt_res <- query_results(odermatt, category = "WC")

# summarise by category and season
summarise_results(odermatt_res, by = c("category", "season"))

# summarise by category, season, and discipline, only show podiums
summarise_results(odermatt_res, by = c("category", "season", "discipline"),
                  show_pos = 1:3, show_dnf = FALSE, show_n_races = FALSE,
                  show_points = FALSE)
}

}
